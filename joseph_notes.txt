Joseph's Notes

09/29/2024
    grammyjs
        Date Today:
            10/15/2024
        Tags:
            
        Rank:
            
        Joseph Notes:
            
        Notes:
            callbackQuery
                Notes:
                    Ties Name of the 
                        Callback identifer
                        Callback function
        
            Router
                Notes:
                    Unlike express's Router, it requires a function that deals with ctx and returns a MaybePromise<string | undefined>
                    It also does not have router.command function unlike bot.command meaning 

                    Also when Router you use router.route(string, function)
                    and string has to be the full string of the command unlike
                    bot.command(string, function)

                reference:
                    https://www.npmjs.com/package/@grammyjs/router

            Sessions and Storing Data (built-in) 
            
                Date Today:
                    10/30/2024
                Notes:
                    Everything about Session stuff such as:
                        1. How to write it correctly
                        2. Session key (Per user, Per chat, or both)
                        3. Chat migrations
                        4. grammY has free cloud storage for hobby projects
                        5. External storage adaptors 
                        6. Lazy Sessions
                            Reduces db reads/writes
                        7. ***** Session migrations (Changing the data in the session) *****

                        8. Storage enhancements

                
                Reference:
                    https://grammy.dev/plugins/session


            LazySession | Lazy Session
                Date Today:
                    10/31/2024

                Important Notes:
                    When the docs refer to middleware (https://grammy.dev/plugins/session#lazy-sessions)
                    they are referring functions given to
                        bot.callbackQuery(..., middleware_function)
                        bot.use(middleware_function,...)
                    This means that the primary functions of your code is affected. 

                    ***** Accessing/Modifying ctx.session causes a corresponding read/write to the database 
                        This is implied within the Lazy Sessions documentation (https://grammy.dev/plugins/session#lazy-sessions).
                            "
                            This is achieved by intercepting access to ctx.session. 
                            If no handler is invoked, then ctx.session will never be accessed. 
                            Lazy sessions use this as an indicator to prevent database communication.
                            "
                        This functionality is probably achieved via "get _VAR_NAME_()" and "set _VAR_NAME_()" within an object.
                        This functionality is similar to python's descriptors.

                    
                    ***** An important discovery *****
                        What the documentations dpes not tell you is that if you have a call like this:
                            bot.use(createConversation(function, "function"))
                        Then anything that uses ctx.session past this call will not be a promise.
                        This is probably because createConversation is considered a Handler
                        (If you jump to the code declaring of createConversation the comments state that it's a handler).

                        If you read the section on Lazy Sessions in the docs (https://grammy.dev/plugins/session#lazy-sessions),
                        the example steps stating how Lazy Sessions would reduce read and write calls states
                        that no handler is invoked which implies that a handler somehow affects ctx.session
                        making it not a promise anymore.

                        Regardless, the documentation is lacking, the examples are lacking, the source code is
                        just a bunch of comments/documentation in TS and if you do find actual source code transpiled JS it is complex
                        and does not make sense unless you're a maintainer. 
                    
                    ***** On the subject of Multi Sessions, Lazy Session, and Conversations
                        Note that Enhance and enhanceStorage works with the listed subjects.

                        Multi Sessions AND Conversations
                            Multi Sessions can work with Conversations.
                                https://grammy.dev/plugins/session#multi-sessions
                                https://grammy.dev/plugins/conversations#installation-with-multi-sessions

                        Lazy Session AND Conversations
                            Lazy Session can work with Conversations.
                            However, due to Conversations using sessions via ctx.sesssion, it will
                            mess with every following ctx.session after the first call of
                                bot.use(createConversation(function, "function"))
                            by making every ctx.session NOT A Promise ANYMORE which
                            breaks the entire purpose of Lazy Session.

                            It will also mess with your ctx.session by forcing you to check the type
                            of ctx.session in order for you to access its properties. This means you
                            need to make "if conditionals" before accessing ctx.session.

                        Multi Sessions AND Lazy Session
                            This does not work. Read what the devs say in the below posts.
                                https://github.com/grammyjs/website/issues/936
                                https://github.com/grammyjs/grammY/pull/216#issuecomment-1201078050

                        Lazy Session AND Conversations AND Multi Sessions
                            From the previous combinations, it's not possible

                        Use 2 bot.use(...), 1st with Conversations on Multi Sessions and 2nd with the normal session on Lazy Session
                            Double stacking bot.use(session(...)) with cause
                                Unknown error: TypeError: Cannot redefine property: session
                Notes:
                    
                    Basic Lazy Session example (https://github.com/grammyjs/examples/blob/main/stats-lazy.ts)


                Reference:
                    https://grammy.dev/plugins/session#lazy-sessions
                    https://github.com/grammyjs/examples/blob/main/stats-lazy.ts

            * On the subject of Conversations *
                Date Today:
                    11/14/2024
                Notes:
                    If you call a conversation method that returns a new context object (ctx), you must use that 
                    ctx because any previous ctx will not saved in the database.

                    Examples of methods called that return a new ctx object (https://grammy.dev/ref/conversations/conversationhandle)
                        conversation.wait()
                        conversation.waitFor()
                        conversation.waitFrom()
                        conversation.waitForReplyTo()

                    Check out conversation.form, though the documentation is shit so good luck 
                        Example

                            // https://grammy.dev/plugins/conversations#forms
                            const age: number = await conversation.form.number();

                        Reference:
                            https://grammy.dev/ref/conversations/conversationhandle#form

                    Check out Example
                        await ctx.conversation.reenter("conversation_buyButton");  // I have not tried this yet

                Reference:
                    https://grammy.dev/ref/conversations/conversationhandle#wait
                    https://grammy.dev/plugins/conversations

            Inline Keyboard (It's actual buttons)
            
                Date Today:
                    10/22/2024

                Joseph Notes:
                    The style is what matters, but what it can do is not really useful.
                Notes:
                    
                    inline keyboard data
                    
                        Date Today:
                            10/22/2024
                        Notes:
                            If you want this style of assigning properties
                                const inlineKeyboard = [
                                    [
                                        {
                                            text: "Text 1",
                                            callback_data: "callback_whatever_1",
                                            url:"...",
                                            web_app:"...",
                                            login_url:"...",
                                            switch_inline_query:"...",
                                            switch_inline_query_current_chat:"...",
                                            switch_inline_query_chosen_chat:"...",
                                            callback_game:"...",
                                            pay:"...",


                                        },
                                        {
                                            text: "Text 2",
                                            callback_data: "callback_whatever_2",
                                            url:"..."
                                            web_app:"...",
                                            ...
                                        },
                                    ],
                                    [...]
                                ]

                            Look at the source code of
                                InlineKeyboardButton[][]
                                InlineKeyboardButton

                            You can't import the above, and the documentation is shit (https://grammy.dev/ref/types/inlinekeyboardbutton), 
                            so you have to copy the below example and use your IDE to jump to "reply_markup" then find "InlineKeyboardButton" 
                            and then IDE jump to it to find the source code
                            

                                // Send inline keyboard with message.
                                await ctx.reply(text, {
                                    reply_markup: inlineKeyboard,
                                });

                            The code came from https://grammy.dev/plugins/keyboard#sending-an-inline-keyboard
                            
                        Reference:
                            

                    Adding additional data along side callback_data to then be received by bot.callbackQuery
                    
                        Date Today:
                            10/22/2024
                        Notes:
                            There is no way to add additional data along side callback_data that would then be received by bot.callbackQuery without
                            making typescript complain.

                            Ways tried
                                1.  Adding additional data to inlineKeyboard = [[{text:"...", callback_data:"...", new_data_wont_be_recorded:"..."}],[...]]

                                2.  "class StringContainer extends String". grammyjs's "interface CallbackButton extends AbstractInlineKeyboardButton" does not like String Objects only
                                    String literals (primitive strings). This means you cannot use pseudo-strings that contain more information about the call.

                                3.  Using the other properties such as "web_app" and "callback_game" to send additional data. This does not work.
                            Ways not tried
                                1.  Python style Descriptors, I don't think JS descriptors are as powerful.

                        Reference:
                            
                Reference:
                    https://grammy.dev/plugins/keyboard#inline-keyboards

            Custom Keyboard (It's buttons within the message)
            
                Date Today:
                    10/22/2024
                Notes:
                    
                Reference:
                    
                    https://grammy.dev/plugins/keyboard#custom-keyboards

            Example of a good initialization file for bot (1)
                Date Today:
                    10/15/2024
                Notes:
                    Export a custom start to be executed somewhere else
                Reference:
                    https://github.com/EdJoPaTo/telegram-typescript-bot-template/blob/main/source/bot/index.ts

            Example of a good initialization file for bot (2)
            
                Date Today:
                    10/15/2024
                Notes:
                    Export a custom start to be executed somewhere else

                    Uses bot.api
                    
                Reference:
                    https://github.com/callsmusic/remix/blob/main/src/bot/index.ts

            List of Examples of how to use grammyjs
                Date Today:
                    10/18/2024
                Notes:
                    grammyjs / examples

                Reference:
                    https://github.com/grammyjs/examples

        Reference:
            Documentation:
                Grammy Docs
                    Date Today:
                        09/29/2024
                    Tags:
                        
                    Rank:
                        
                    Joseph Notes:
                        
                    Notes:
                        https://grammy.dev/guide/introduction
                            Easier to use Deno over Node.js

                    Reference:
                        https://grammy.dev/guide

            YouTube:
                Building a Telegram Bot with Edge Functions 
                    Date Today:
                        09/29/2024
                    Tags:
                        
                    Rank:
                        
                    Joseph Notes:
                        
                    Notes:
                        Supabase

                        Standard Example Tutorial with 
                            Supabase

                    Reference:
                        https://www.youtube.com/watch?v=AWfE3a9J_uo 

            What is globalThis in Javascript? What will be the ideal use case for this?
                Date Today:
                    10/15/2024
                Tags:
                    
                Rank:
                    
                Joseph Notes:
                    
                Notes:
                    globalThis is pretty much a placeholder for this, self, window, etc depending on where your code is running.

                Reference:
                    https://stackoverflow.com/questions/57157864/what-is-globalthis-in-javascript-what-will-be-the-ideal-use-case-for-this

            YouTube:
                Master Prisma Migrations Basics 
                
                    Date Today:
                        10/28/2024
                    Tags:
                        
                    Rank:
                        
                    Joseph Notes:
                        
                    Notes:
                        Alex Rusin

                        Prisma basics

                        Prisma has no rollbacks, you only can migrate

                        Since you don't have rollbacks and when you rename stuff in the db it will drop and then create
                        what you need to do is call "npx prisma migrate dev --create-only" and then modify the migration file
                        then call "npx primsa migrate dev" 


                    Reference:
                        https://www.youtube.com/watch?v=_-YCDwm9M7M

                How to model relationships (1-1, 1-m, m-m)
                
                    Date Today:
                        10/28/2024
                    Tags:
                        
                    Rank:
                        
                    Joseph Notes:
                        
                    Notes:
                        Prisma
                        Prisma basics

                        Writing db relationships, it's more dumb than just writing sql
                    Reference:
                        https://www.youtube.com/watch?v=fpBYj55-zd8
                

                Dynamic import() Expressions in TypeScript
                
                    Date Today:
                        10/30/2024
                    Tags:
                        
                    Rank:
                        
                    Joseph Notes:
                        
                    Notes:
                        January 14, 2018

                        JS and TS on dynamic imports.
                        TS has some caveats depending on "module" in tsconfig.json
                    Reference:
                        https://mariusschulz.com/blog/dynamic-import-expressions-in-typescript